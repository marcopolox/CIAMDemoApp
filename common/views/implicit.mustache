<!doctype html>
<html lang="en">
{{>head}}
<body>
    <div class="app-container app-theme-white body-tabs-shadow fixed-sidebar fixed-header">
        {{>app-header}}               
        <div class="app-main">
                {{>side-menu}}    
                <div class="app-main__outer">
                    <div class="app-main__inner">
                        <div class="app-page-title">
                            <div class="page-title-wrapper">
                                <div class="page-title-heading">
                                    <div class="page-title-icon">
                                        <i class="pe-7s-magic-wand icon-gradient bg-mean-fruit">
                                        </i>
                                    </div>
                                    <div>Okta for CIAM
                                        <div class="page-title-subheading">Customer Identity Access Management (CIAM) & B2B Identity
                                        </div>
                                    </div>
                                </div>   
                            </div>
                        </div> 
                        {{>backendtokens}}
                        <button id="implicituserinfo" class="btn btn-secondary">See Userinfo</button>
                    </div>
                </div>
        </div>
    </div>
    <div id="isLoggedIn" style="display:none" value="{{isLoggedIn}}"></div>
    <div id="userinfodata" style="display:none"></div>
<script type="text/javascript" src="./assets/scripts/main.js"></script>
<script>
loading(true);
authClient.token.getWithoutPrompt({
  responseType: ['id_token','token'], // or array of types
})
.then(function(res) {
    $("#accesstokendecoded").text(JSON.stringify(authClient.token.decode(res.tokens.accessToken.accessToken),null,4));
    $("#idtokendecoded").text(JSON.stringify(authClient.token.decode(res.tokens.idToken.idToken),null,4));
    $("#accesstoken").text(JSON.stringify(res.tokens.accessToken,null,4));
    $("#idtoken").text(JSON.stringify(res.tokens.idToken,null,4));
    authClient.tokenManager.add('idToken', res.tokens.idToken);
    authClient.tokenManager.add('accessToken', res.tokens.accessToken);
    showHeader(res.tokens.idToken.claims.firstName);
    authClient.token.getUserInfo()
    .then(function(user) {
        console.log("userinfo: ",user);
        $("#userinfodata").val(user);
        loading(false);
    });
})
.catch(function(err) {
  // handle OAuthError
  console.log("error: ",err);
});


function showHeader(name) {
    //console.log("showing header...name="+name);
    $(".app-header-right").show();
    $("#user_name").text(name);
    
}

$(document).ready(function(){
    $('#city').prop('readonly', false);

    $("#implicituserinfo").click(function(e){
        e.preventDefault();
        const userinfodata = $("#userinfodata").val();
        console.log("userinfodata: ",userinfodata);
        window.location.href = "/userinfo?data="+encodeURIComponent(JSON.stringify(userinfodata));
    });

    $("#updateuser").click(function(e){
        e.preventDefault();
        const token = $("#accesstoken").val();
        const city = $('#city').val();
        const userid = $('#sub').val();
        const data = {"userid":userid,"city":city,"token":token};
        console.log("data: ",data);
        updateuser(data);
    });

    async function updateuser(attrtoupdate){
        loading(true);
        let resp = await $.ajax({
            type: "POST",
            url: "/updateuser",
            contentType: 'application/json',
            data: JSON.stringify(attrtoupdate),
            success: function(res){
                console.log("Call result: "+res);
                loading(false);
                showToast(true,res);
            },
            error: function(errMsg){
                console.log("errorMsg: ",errMsg);
                loading(false);
                showToast(false,errMsg);
            }
        });
        return resp;
    }

    function showToast(good,msg) {
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
            }
        if(good){
            toastr.success("User profile updated", "Success");
        } else {
            toastr.error(msg, "Error");
        }
        
    }
});

</script>
</body>
</html>
